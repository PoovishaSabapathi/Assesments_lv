# -*- coding: utf-8 -*-
"""lvadsusr174.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hR5pZB_kC8Je1xbqYQdW47PjhcFNrHRw
"""

import numpy as np
import pandas as pd

"""1."""

arr1=np.array([1,2,3,4])
arr2=np.array([2,3,4,5])
minimum_res=np.min(arr1)
maximum_res=np.max(arr2)
sum_res=arr1+arr2
mean_res=np.mean(arr1)
standard_res=np.std(arr1)
print("minimum",minimum_res)
print("maximum",maximum_res)
print("sum",sum_res)
print("mean",mean_res)
print("standard deviation",standard_res)

"""2."""

def health(health_data):
  h_mean=0
  h_std=1
  h_mean=np.mean(health_data)
  h_std=np.std(health_data)
  return h_mean,h_std
health_data = np.array([[160, 70, 30],   # height, weight, age for individual 1
                        [165, 65, 35],   # height, weight, age for individual 2
                        [170, 75, 40]])  # height, weight, age for individual 3
print(health_data)
res_ans=health(health_data)
print(res_ans)

"""3."""

stu_arr=np.array([['amutha',56,67,34],['mano',67,89,98],['raj',89,-1,67]])
print(stu_arr)
arr_sli=stu_arr[:,1:4]
print(arr_sli)
res_avg=np.average(arr_sli,axis=0)
print(res_avg)

"""4."""

arr=np.linspace(15,25,24)
print(arr)

"""5."""

import numpy as np
daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
window_size = 5
arr=daily_closing_prices[-5:]
print(arr)
res_mov_avg=np.average(arr)
print(res_mov_avg)

"""6."""

mean_vector=np.array([0,0])
covariance_matrix=np.array([[1,0.5],[0.5,2]])
res=np.linspace(mean_vector:covariance_matrix,100)
print(res)

"""7."""

properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])
print(properties_matrix)
np.linalg.matrix_determinant(properties_matrix)

"""8."""

arr = np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]])
arr1=np.array([1,2,3,4])
arr_boolean=np.where(arr>5)
res_arr=arr(arr_boolean)
print(arr_boolean)
print(res_arr)

"""9."""

data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}
#df=pd.DataFrame(data)
#print(df)
age_res=pd.DataFrame(data,df['Age']>45,'Department='HR)
print(age_res)

"""10."""

data = {'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]}
df=pd.DataFrame(data)
res=df.groupby(['Department','Salesperson'])['Sales'].aggregate('mean')
print(res)

"""11."""

data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]}
df=pd.DataFrame(data)
avg_price=['Price'].aggregate('mean')
ans=df.groupby('Fruit')['Price'>avg_price,'Promotion'=False]
print(ans)

"""12."""

employee_data = {
    'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
    'Department': ['HR', 'IT', 'Finance', 'IT'],
    'Manager': ['John', 'Rachel', 'Emily', 'Rachel']
}

# Dataset of employee project assignments
project_data = {
    'Employee': ['Alice', 'Charlie', 'Eve'],
    'Project': ['P1', 'P3', 'P2']}
df1=pd.DataFrame(employee_data)
df2=pd.DataFrame(project_data)
res=df1.join(df2)
print(res)

"""13."""

data=pd.read_csv('/content/sample_data/Q13_sports_team_stats.csv')
print(data)
win_ratio=data.['Wins']/data.['GamesPlayes']
avg_score=data.groupby('TeanID')['Wins'].aggregate('mean')
performance_metrics=data.groupby('TeamID')[GamesPlayed].aggregate('sum')
print(win_ratio,avg_score,performance_metrics)

"""14."""

data=pd.read_csv('/content/sample_data/Q14_customer_purchases.csv')
print(data)
avg_pur=data['CustomerID'].aggregate('mean')
print("Average purchase",avg_pur)
sign_date=datetime.date(LoyaltyProgramSignUp)
print(sign_date)
res_tab=data[['CustomerID',['PurchaseAmount'],["LoyaltyProgramSignUp"]]]
print(res_tab_data)

"""15."""

data=pd.read_csv('/content/sample_data/Q15_student_grades.csv')
print(data)
res=data.groupby(['Subject','StudentID'])['Grade'].aggregate('sum')
print(res)